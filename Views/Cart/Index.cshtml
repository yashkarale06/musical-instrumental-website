@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="cart-page">
    <h2>Shopping Cart</h2>
    
    @if (TempData["CartMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["CartMessage"]
        </div>
    }
    
    <div class="cart-content">
        <!-- Cart items would typically be dynamically populated from a model -->
        <!-- For demo purposes, we're showing static content -->
        <div class="cart-items">
            <div class="cart-item">
                <div class="item-details">
                    <h3>Acoustic Guitar</h3>
                    <p>Premium wooden acoustic guitar</p>
                </div>
                <div class="item-price">₹22,499</div>
                <div class="item-quantity">
                    <select>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>
                </div>
                <div class="item-total">₹22,499</div>
                <div class="item-remove">
                    <button class="remove-item">Remove</button>
                </div>
            </div>
            
            <div class="cart-item">
                <div class="item-details">
                    <h3>Digital Piano</h3>
                    <p>88-key weighted digital piano</p>
                </div>
                <div class="item-price">₹41,249</div>
                <div class="item-quantity">
                    <select>
                        <option value="1">1</option>
                        <option value="2" selected>2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>
                </div>
                <div class="item-total">₹82,498</div>
                <div class="item-remove">
                    <button class="remove-item">Remove</button>
                </div>
            </div>
        </div>
        
        <div class="cart-summary">
            <div class="summary-row">
                <span>Subtotal:</span>
                <span>₹104,997</span>
            </div>
            <div class="summary-row">
                <span>Shipping:</span>
                <span>₹500</span>
            </div>
            <div class="summary-row">
                <span>Tax (18% GST):</span>
                <span>₹18,900</span>
            </div>
            <div class="summary-row total">
                <span>Total:</span>
                <span>₹124,397</span>
            </div>
            
            <a href="/Cart/Checkout" class="btn checkout-btn">Proceed to Checkout</a>
            <a asp-controller="Product" asp-action="Index" class="continue-shopping">Continue Shopping</a>
        </div>
    </div>
</div>

<style>
    .cart-page {
        margin-bottom: 2rem;
    }
    
    .cart-page h2 {
        margin-bottom: 1.5rem;
    }
    
    .alert {
        padding: 1rem;
        margin-bottom: 1.5rem;
        border-radius: 4px;
    }
    
    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
    
    .cart-content {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 2rem;
    }
    
    .cart-items {
        background-color: #f9f9f9;
        border-radius: 8px;
        padding: 1rem;
    }
    
    .cart-item {
        display: grid;
        grid-template-columns: 3fr 1fr 1fr 1fr 1fr;
        gap: 1rem;
        padding: 1rem 0;
        border-bottom: 1px solid #ddd;
    }
    
    .cart-item:last-child {
        border-bottom: none;
    }
    
    .item-details h3 {
        margin-bottom: 0.5rem;
    }
    
    .item-quantity select {
        width: 60px;
        padding: 0.25rem;
    }
    
    .remove-item {
        background-color: transparent;
        color: #dc3545;
        border: 1px solid #dc3545;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        cursor: pointer;
    }
    
    .remove-item:hover {
        background-color: #dc3545;
        color: white;
    }
    
    .cart-summary {
        background-color: #f4f4f4;
        padding: 1.5rem;
        border-radius: 8px;
        align-self: flex-start;
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
    }
    
    .summary-row.total {
        font-weight: bold;
        font-size: 1.2rem;
        border-top: 1px solid #ddd;
        padding-top: 1rem;
        margin-top: 1rem;
    }
    
    .checkout-btn {
        display: block;
        width: 100%;
        text-align: center;
        margin-bottom: 1rem;
        padding: 0.75rem;
        background-color: #28a745;
    }
    
    .checkout-btn:hover {
        background-color: #218838;
    }
    
    .continue-shopping {
        display: block;
        text-align: center;
        color: #007bff;
        text-decoration: none;
    }
    
    .continue-shopping:hover {
        text-decoration: underline;
    }
    
    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .cart-content {
            grid-template-columns: 1fr;
        }
        
        .cart-item {
            grid-template-columns: 1fr;
        }
        
        .item-details, .item-price, .item-quantity, .item-total, .item-remove {
            padding: 0.5rem 0;
        }
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle quantity changes
            const quantitySelects = document.querySelectorAll('.item-quantity select');
            quantitySelects.forEach(select => {
                select.addEventListener('change', function() {
                    // In a real app, this would update the cart via AJAX
                    alert('Quantity updated! In a real app, this would recalculate the cart.');
                });
            });
            
            // Handle remove buttons
            const removeButtons = document.querySelectorAll('.remove-item');
            removeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // In a real app, this would remove the item via AJAX
                    const cartItem = this.closest('.cart-item');
                    cartItem.style.opacity = '0.5';
                    setTimeout(() => {
                        alert('Item removed! In a real app, this would update the cart.');
                        cartItem.style.opacity = '1';
                    }, 500);
                });
            });
        });
    </script>
}