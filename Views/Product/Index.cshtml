@model IEnumerable<MusicalInstrumentShop.Models.Product>

@{
    ViewData["Title"] = "Products";
    var selectedCategory = ViewBag.CategoryId;
    var priceRange = ViewBag.PriceRange;
    var sortBy = ViewBag.SortBy;
}

<section class="products-header">
    <h2>
        @if (ViewBag.SelectedCategory != null)
        {
            <span>@ViewBag.SelectedCategory</span>
        }
        else
        {
            <span>All Products</span>
        }
    </h2>
    <form id="filter-form" method="get" asp-controller="Product" asp-action="Index">
        <div class="products-filter">
            <div class="filter-group">
                <label for="categoryId">Category:</label>
                <select id="categoryId" name="categoryId" onchange="document.getElementById('filter-form').submit()">
                    <option value="">All Categories</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        if (selectedCategory == category.CategoryId)
                        {
                            <option value="@category.CategoryId" selected>@category.Name</option>
                        }
                        else
                        {
                            <option value="@category.CategoryId">@category.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="filter-group">
                <label for="priceRange">Price Range:</label>
                <select id="priceRange" name="priceRange" onchange="document.getElementById('filter-form').submit()">
                    <option value="">All Prices</option>
                    @if (priceRange == "0-10000")
                    {
                        <option value="0-10000" selected>₹0 - ₹10,000</option>
                    }
                    else
                    {
                        <option value="0-10000">₹0 - ₹10,000</option>
                    }
                    
                    @if (priceRange == "10000-25000")
                    {
                        <option value="10000-25000" selected>₹10,000 - ₹25,000</option>
                    }
                    else
                    {
                        <option value="10000-25000">₹10,000 - ₹25,000</option>
                    }
                    
                    @if (priceRange == "25000-50000")
                    {
                        <option value="25000-50000" selected>₹25,000 - ₹50,000</option>
                    }
                    else
                    {
                        <option value="25000-50000">₹25,000 - ₹50,000</option>
                    }
                    
                    @if (priceRange == "50000+")
                    {
                        <option value="50000+" selected>₹50,000+</option>
                    }
                    else
                    {
                        <option value="50000+">₹50,000+</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label for="sortBy">Sort By:</label>
                <select id="sortBy" name="sortBy" onchange="document.getElementById('filter-form').submit()">
                    @if (sortBy == "popular" || string.IsNullOrEmpty(sortBy))
                    {
                        <option value="popular" selected>Popularity</option>
                    }
                    else
                    {
                        <option value="popular">Popularity</option>
                    }
                    
                    @if (sortBy == "price-low")
                    {
                        <option value="price-low" selected>Price: Low to High</option>
                    }
                    else
                    {
                        <option value="price-low">Price: Low to High</option>
                    }
                    
                    @if (sortBy == "price-high")
                    {
                        <option value="price-high" selected>Price: High to Low</option>
                    }
                    else
                    {
                        <option value="price-high">Price: High to Low</option>
                    }
                    
                    @if (sortBy == "name")
                    {
                        <option value="name" selected>Name</option>
                    }
                    else
                    {
                        <option value="name">Name</option>
                    }
                </select>
            </div>
        </div>
    </form>
</section>

<section class="product-list">
    @if (!Model.Any())
    {
        <div class="no-products">
            <p>No products match your selected filters. Please try different criteria.</p>
            <a asp-controller="Product" asp-action="Index" class="btn">View All Products</a>
        </div>
    }
    else
    {
        <div class="product-grid">
            @foreach (var product in Model)
            {
                <div class="product">
                    <div class="product-image">
                        <img src="@product.ImageUrl" alt="@product.Name">
                    </div>
                    <h3>@product.Name</h3>
                    <p>@product.Description</p>
                    <p class="price">₹@product.Price.ToString("N0")</p>
                    <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ProductId" class="btn">View Details</a>
                    <button class="add-to-cart" data-id="@product.ProductId">Add to Cart</button>
                </div>
            }
        </div>
    }
</section>

<style>
    /* Product Styles */
    .product-list {
        margin-bottom: 2rem;
    }
    
    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
    }
    
    .product {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 0;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: flex;
        flex-direction: column;
    }
    
    .product:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .product-image {
        height: 200px;
        overflow: hidden;
    }
    
    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .product:hover .product-image img {
        transform: scale(1.05);
    }
    
    .product h3 {
        margin: 1rem 1rem 0.5rem;
        font-size: 1.2rem;
    }
    
    .product p {
        margin: 0 1rem 0.5rem;
        color: #666;
    }
    
    .product .price {
        font-weight: bold;
        font-size: 1.2rem;
        color: #e63946;
        margin: 0 1rem 1rem;
    }
    
    .product .btn {
        margin: 0 1rem;
    }
    
    .product .add-to-cart {
        margin: 0.5rem 1rem 1rem;
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        border-radius: 4px;
        cursor: pointer;
    }
    
    .product .add-to-cart:hover {
        background-color: #45a049;
    }
    
    /* Filter Styles */
    .products-header {
        margin-bottom: 2rem;
    }
    
    .products-filter {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        margin-top: 1rem;
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 8px;
    }
    
    .filter-group {
        display: flex;
        align-items: center;
    }
    
    .filter-group label {
        margin-right: 0.5rem;
        font-weight: bold;
    }
    
    .filter-group select {
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    
    .no-products {
        text-align: center;
        padding: 2rem;
        background-color: #f8f9fa;
        border-radius: 8px;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add event listeners for add to cart buttons
            document.querySelectorAll('.add-to-cart').forEach(button => {
                button.addEventListener('click', function() {
                    const productId = parseInt(this.getAttribute('data-id'), 10);
                    const productElement = this.closest('.product');
                    
                    if (productElement) {
                        const name = productElement.querySelector('h3').textContent;
                        const priceElement = productElement.querySelector('.price');
                        const priceText = priceElement.textContent.replace('₹', '').replace(/,/g, '');
                        const price = parseFloat(priceText);
                        
                        const imageElement = productElement.querySelector('img');
                        const imageUrl = imageElement ? imageElement.getAttribute('src') : '';
                        
                        // Access the cart object from site.js
                        if (typeof cart !== 'undefined') {
                            cart.addItem(productId, name, price, 1, imageUrl);
                            alert(`Added ${name} to cart!`);
                        } else {
                            console.error('Cart object not found. Make sure site.js is loaded properly.');
                        }
                    }
                });
            });
        });
    </script>
}